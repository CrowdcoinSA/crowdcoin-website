"""
Django settings for crowdcoin_web project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG',False)

ALLOWED_HOSTS = ['0.0.0.0','www.crowdcoin.co.za']

CROWDCOIN_API_URL =  os.environ.get('CROWDCOIN_API_URL')

CROWDCOIN_DEFAULT_PASSWORD = os.environ.get('CROWDCOIN_DEFAULT_PASSWORD')

CROWDCOIN_DEFAULT_USER = os.environ.get('CROWDCOIN_DEFAULT_USER')

CROWDCOIN_ADMIN_MSISDN = os.environ.get('CROWDCOIN_ADMIN_MSISDN','0812829452')

CROWDCOIN_ENV = os.environ.get('CROWDCOIN_ENV')

if CROWDCOIN_ENV == 'PRODUCTION':
    SECURE_SSL_REDIRECT =  os.environ.get('SECURE_SSL_REDIRECT', False)

    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')    


SITE_ID = 1

SESSION_SAVE_EVERY_REQUEST = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',
    'www',
    'payfast',
    'freshdesk',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'crowdcoin_web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static_files"),
]

WSGI_APPLICATION = 'crowdcoin_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

if 'DATABASE_URL' in os.environ:
    import dj_database_url
    DATABASES = {'default': dj_database_url.config()}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'crowdcoin-django.log',
            'formatter': 'verbose'
        },
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers':['file','console'],
            'propagate': True,
            'level':'WARNING',
            'formatter': 'verbose',
        },
        'www': {
            'handlers': ['file','console'],
            'level': 'INFO',
            'formatter': ['verbose'],
        },
        'crowdcoin_web': {
            'handlers': ['file','console'],
            'level': 'INFO',
            'formatter': ['verbose'],
        }
    }
}

#Payfast
PAYFAST_TEST_MODE = bool(os.environ.get('PAYFAST_TEST_MODE',False))

PAYFAST_MERCHANT_ID = os.environ.get('PAYFAST_MERCHANT_ID')

PAYFAST_MERCHANT_KEY = os.environ.get('PAYFAST_MERCHANT_KEY')

FRESHDESK_URL = os.environ.get('FRESHDESK_URL','crowdcoin.freshdesk.com/')

FRESHDESK_KEY = os.environ.get('FRESHDESK_KEY')